#!perl
use Cassandane::Tiny;

use experimental 'signatures';

sub test_card_patch_onlineservices
    :needs_dependency_icalvcard
{
    my ($self) = @_;

    my $jmap = $self->{jmap};

    my $service = $self->{instance}->get_service("http");
    my $carddav = Net::CardDAVTalk->new(
        user => 'cassandane',
        password => 'pass',
        host => $service->host(),
        port => $service->port(),
        scheme => 'http',
        url => '/',
        expandurl => 1,
    );

    my sub get_vcard ($uid) {
        my $href = "Default/$uid.vcf";
        my $res = $carddav->Request('GET', $href);
        return $res->{content};
    }

    xlog $self, "create contact";
    my $name = 'Mr. John Q. Public, Esq.';
    my $uid = '8ec9d0b4-b025-11f0-b838-d52d526566fe';

    my $res = $jmap->CallMethods([
        ['ContactCard/set', {
            create => {
                "1" => {
                    '@type' => 'Card',
                    version => '1.0',
                    uid => $uid,
                    name => { full => $name },
                    onlineServices => { foo => {
                        service => 'My Page',
                        user    => 'https://example.com/userpage',
                    } },
                }
            }
        }, 'R1']
    ]);

    my $id = $res->[0][1]{created}{1}{id};

    my sub update_card ($patch) {
        my $res = $jmap->CallMethods([
            [ 'ContactCard/set', { update => { $id => $patch } }, 'set' ],
        ]);

        die unless $res->[0][0] eq 'ContactCard/set';
        return $res->[0][1]{updated}{$id};
    }

    my $vcard = get_vcard($uid);
    $vcard =~ s/\r?\n[ \t]+//gs;  # unfold long properties

    $self->assert_matches(qr|X-SOCIALPROFILE;TYPE=My Page;PROP-ID=foo:https://example.com/userpage\r\n|, $vcard);

    update_card({
        'onlineServices/xyzzy' => {
            service => 'Other Page',
            user    => 'https://example.com/otherpage',
        },
    });

    $vcard = get_vcard($uid);
    $vcard =~ s/\r?\n[ \t]+//gs;  # unfold long properties

    $self->assert_matches(qr|X-SOCIALPROFILE;TYPE=My Page;PROP-ID=foo:https://example.com/userpage\r\n|, $vcard);
    $self->assert_matches(qr|X-SOCIALPROFILE;TYPE=Other Page;PROP-ID=xyzzy:https://example.com/otherpage\r\n|, $vcard);
}
