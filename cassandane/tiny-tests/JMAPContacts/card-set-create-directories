#!perl
use Cassandane::Tiny;

sub test_card_set_create_directories
    :min_version_3_9 :needs_component_jmap
{
    my ($self) = @_;
    my $jmap = $self->{jmap};

    my $service = $self->{instance}->get_service("http");
    $ENV{DEBUGDAV} = 1;
    my $carddav = Net::CardDAVTalk->new(
        user => 'cassandane',
        password => 'pass',
        host => $service->host(),
        port => $service->port(),
        scheme => 'http',
        url => '/',
        expandurl => 1,
    );

    my $id = 'ae2640cc-234a-4dd9-95cc-3106258445b9';
    my $href = "Default/$id.vcf";

    my $res = $jmap->CallMethods([
        ['Card/set', {
            create => {
                "1" => {
                    '@type' => 'Card',
                    '@version' => '1.0',
                    uid => $id,
                    fullName => 'Jane Doe',
                    directories => {
                        'DIRECTORY-1' => {
                            '@type' => 'DirectoryResource',
                            kind => 'directory',
                            uri => 'https://directory.mycompany.example.com',
                            listAs => 1
                        },
                        'DIRECTORY-2' => {
                            '@type' => 'DirectoryResource',
                            kind => 'directory',
                            uri => 'ldap://ldap.tech.example/o=Tech,ou=Engineering',
                            pref => 1
                        },
                        'ENTRY-1' => {
                            '@type' => 'DirectoryResource',
                            kind => 'entry',
                            uri => 'https://dir.example.com/addrbook/jdoe/Jean%20Dupont.vcf'
                        }
                    }
                }
            }
        }, 'R1']
    ]);

    $self->assert_not_null($res->[0][1]{created}{1});

    $res = $carddav->Request('GET', $href, '',
                             'Accept' => 'text/vcard; version=4.0');

    my $card = $res->{content};
    $card =~ s/\r?\n[ \t]+//gs;  # unfold long properties
    $card =~ s/\\,/,/gs;         # unescape commas

    $self->assert_matches(qr|ORG-DIRECTORY;PROP-ID=DIRECTORY-1;INDEX=1:https://directory.mycompany.example.com|, $card);
    $self->assert_matches(qr|ORG-DIRECTORY;PROP-ID=DIRECTORY-2;PREF=1:ldap://ldap.tech.example/o=Tech,ou=Engineering|, $card);
    $self->assert_matches(qr|SOURCE;PROP-ID=ENTRY-1:https://dir.example.com/addrbook/jdoe/Jean%20Dupont.vcf|, $card);
    $self->assert_does_not_match(qr|JSCONTACT-PROP|, $card);
}
