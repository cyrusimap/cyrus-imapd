#!perl
use Cassandane::Tiny;

sub test_card_set_create_online
    :min_version_3_9 :needs_component_jmap
{
    my ($self) = @_;
    my $jmap = $self->{jmap};

    my $service = $self->{instance}->get_service("http");
    $ENV{DEBUGDAV} = 1;
    my $carddav = Net::CardDAVTalk->new(
        user => 'cassandane',
        password => 'pass',
        host => $service->host(),
        port => $service->port(),
        scheme => 'http',
        url => '/',
        expandurl => 1,
    );

    my $id = 'ae2640cc-234a-4dd9-95cc-3106258445b9';
    my $href = "Default/$id.vcf";

    my $res = $jmap->CallMethods([
        ['Card/set', {
            create => {
                "1" => {
                    '@type' => 'Card',
                    version => '1.0',
                    uid => $id,
                    fullName => 'Jane Doe',
                    onlineServices => {
                        x1 => {
                            '@type' => 'OnlineService',
                            uri => 'xmpp:alice@example.com',
                            pref => 1
                        },
                        x2 => {
                            '@type' => 'OnlineService',
                            service => 'Mastodon',
                            user => '@foo@example.com',
                            uri => 'https://example.com/@foo'
                        }
                    }
                }
            }
        }, 'R1']
    ]);

    $self->assert_not_null($res->[0][1]{created}{1});

    $res = $carddav->Request('GET', $href, '',
                             'Accept' => 'text/vcard; version=4.0');

    my $card = $res->{content};
    $card =~ s/\r?\n[ \t]+//gs;  # unfold long properties
    $card =~ s/\\,/,/gs;         # unescape commas

    $self->assert_matches(qr|IMPP;PROP-ID=x1;PREF=1:xmpp:alice\@example.com|, $card);
    $self->assert_matches(qr|SOCIALPROFILE;SERVICE-TYPE=Mastodon;USERNAME=\@foo\@example.com;PROP-ID=x2:https://example.com/\@foo|, $card);
    $self->assert_does_not_match(qr|JSCONTACT-PROP|, $card);
}
