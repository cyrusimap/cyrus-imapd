#!perl
use Cassandane::Tiny;

sub test_scan
  : min_version_3_9 {
  my ($self) = @_;

  my $store    = $self->{store};
  my $imaptalk = $store->get_client();

  $self->setup_mailbox_structure($imaptalk,
    [ [ 'create' => [qw( INBOX.a INBOX.b INBOX.c )] ], ]);

  xlog $self, "listing...";
  my $res = $imaptalk->list("", "*");

  $self->assert_mailbox_structure(
    $res, '.',
    {
      'INBOX'   => [qw( \\HasChildren )],
      'INBOX.a' => [qw( \\HasNoChildren )],
      'INBOX.b' => [qw( \\HasNoChildren )],
      'INBOX.c' => [qw( \\HasNoChildren )],
    },
    'strict'
  );

  xlog $self, "Generate some messages";
  $store->set_folder('INBOX.a');
  $self->make_message("foo");

  $store->set_folder('INBOX.b');
  $self->make_message("bar");

  $store->set_folder('INBOX.c');
  $self->make_message("baz", body => 'foo\r\n');

  my @results = {};
  xlog $self, "scan with a selected mailbox";
  $res = $imaptalk->_imap_cmd('SCAN', 0, "list", "", "*", "foo");

  $self->assert_mailbox_structure(
    $res, '.',
    {
      'INBOX.a' => [qw( \\HasNoChildren )],
      'INBOX.c' => [qw( \\HasNoChildren )],
    },
    'strict'
  );

  xlog $self, "scan with NO selected mailbox";
  $res = $imaptalk->unselect();
  $res = $imaptalk->_imap_cmd('SCAN', 0, "list", "", "*", "bar");

  $self->assert_mailbox_structure(
    $res, '.',
    {
      'INBOX.b' => [qw( \\HasNoChildren )],
    },
    'strict'
  );
}
