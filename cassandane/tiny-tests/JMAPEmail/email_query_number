#!perl
use Cassandane::Tiny;

sub test_email_query_number
{
    my ($self) = @_;
    my $jmap   = $self->{jmap};
    my $imap   = $self->{store}->get_client();

    my $mime = <<'EOF';
From: from@example.com
To: to@example.com
Subject: test
Date: Mon, 13 Apr 2020 15:34:03 +0200
MIME-Version: 1.0
Content-Type: text/plain

The total amount is $1,234.56 USD.
EOF
    $mime =~ s/\r?\n/\r\n/gs;
    $imap->append('INBOX', $mime) || die $@;

    xlog "Run squatter";
    $self->{instance}->run_command({ cyrus => 1 }, 'squatter', '-Z');

    my %testCases = (
        '1,234.56' => 1,
        '1.234,56' => 1,
        '1234.56'  => 1,
        '1234,56'  => 1,
        '1234.*'  => 1,
        '1234,*'  => 1,
        '1,234.*'  => 1,
        '1.234,*'  => 1,
        '1234.5*'  => 1,
        '1234,5*'  => 1,
        '1,234.5*'  => 1,
        '1.234,5*'  => 1,
        '1,234*'   => 1,
        '1.234*'   => 1,
        '1,234'    => 0,
        '1.234'    => 0,
        '1,234,*'  => 0,
        '1,23,4.*' => 0,
        '1,234,567.89' => 0,
        '1.234.567,89' => 0,
        '1,234,56' => 0,
        '1.234.56' => 0,
    );

    foreach my $term (sort keys %testCases) {
        my $res = $jmap->CallMethods([
            [ 'Email/query', {
                filter => {
                    body => $term,
                },
            }, 'R1'],
        ]);
        my $wantMatch = $testCases{$term};
        $self->assert_num_equals($wantMatch, scalar @{$res->[0][1]{ids}});
    }
}
